<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Java on 暗影流金的博客</title>
        <link>https://ayljzj520.github.io/categories/java/</link>
        <description>Recent content in Java on 暗影流金的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>暗影流金</copyright><atom:link href="https://ayljzj520.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>java学习</title>
        <link>https://ayljzj520.github.io/p/java%E5%AD%A6%E4%B9%A0/</link>
        <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
        
        <guid>https://ayljzj520.github.io/p/java%E5%AD%A6%E4%B9%A0/</guid>
        <description>&lt;img src="https://ayljzj520.github.io/p/java%E5%AD%A6%E4%B9%A0/Amain.jpg" alt="Featured image of post java学习" /&gt;&lt;blockquote&gt;
&lt;p&gt;“Work！ ”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;学习顺序&#34;&gt;学习顺序
&lt;/h2&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;./javaroad.jpg&#34;/&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;学习完java基础之后,先学习mysql，然后稍微了解一下javaweb的层，直接去学习springboot，学完了然后往前学ssm，理解为什么springboot淘汰了以前的ssm框架，然后再往前学javaweb，理解框架的好处。这样每个学习都有目标，不至于说学习了javaweb，然后学习ssm的时候觉得之前学习的东西都白学了，学习springboot，觉得ssm白学了。
等这一套学习了完了之后，去学习设计模式，了解设计思想。然后再去学习数据结构，了解底层。最后才是jvm
从入门，到实际开发，一开始给你成就感，让你有动力继续学习下去，而不是从javaweb开始，盼着早日学到springboot，我就能够出去找工作了。&lt;br&gt;
还有一点，springboot相较与javaweb和ssm，会简单很多，毕竟springboot约定大于配置。&lt;/p&gt;
&lt;p&gt;java架构层次&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pojo(或entity)：实体类&lt;/li&gt;
&lt;li&gt;util:工具类&lt;/li&gt;
&lt;li&gt;service：代码逻辑&lt;/li&gt;
&lt;li&gt;mapper：数据库接口层&lt;/li&gt;
&lt;li&gt;web：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表现层(servlet,SpringMVC)
业务层()
数据层(JDBC,MyBatis)&lt;/p&gt;
&lt;p&gt;创建接口后，在接口中定义方法，在接口的实现类中实现方法&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;spring-mvc表现层框架&#34;&gt;spring MVC(表现层框架)
&lt;/h2&gt;&lt;p&gt;导jar包&lt;br&gt;
创建SpringMVC控制类&lt;br&gt;
创建SpringMVC配置类&lt;br&gt;
方法前加@controller&lt;br&gt;
设置访问路径@requestmapping(&amp;quot;/aaa&amp;quot;)&lt;br&gt;
@responsebody&lt;br&gt;
get请求与post请求&lt;br&gt;
rest代码风格&lt;br&gt;
查询get&lt;br&gt;
添加post&lt;br&gt;
修改put&lt;br&gt;
删除delete&lt;br&gt;&lt;/p&gt;
&lt;p&gt;静态资源放行tomcat处理&lt;/p&gt;
&lt;h2 id=&#34;ssm整合&#34;&gt;SSM整合
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;spring
&lt;ul&gt;
&lt;li&gt;springConfig&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mybatis
&lt;ul&gt;
&lt;li&gt;mybatisConfig&lt;/li&gt;
&lt;li&gt;jdbcConfig&lt;/li&gt;
&lt;li&gt;jdbc.properties&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SpringMVC
&lt;ul&gt;
&lt;li&gt;servletConfig&lt;/li&gt;
&lt;li&gt;SpringMVCConfig&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;功能模块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表与实体类&lt;/li&gt;
&lt;li&gt;dao（接口+自动代理）&lt;/li&gt;
&lt;li&gt;service（接口+实现类）
&lt;ul&gt;
&lt;li&gt;业务层接口测试（整合JUnit）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;controller
&lt;ul&gt;
&lt;li&gt;表现层接口测试（PostMan）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表现层数据封装规范&lt;br&gt;
异常处理器&lt;br&gt;
表现层 → 业务层：表现层接收用户请求，调用业务层的接口处理请求。&lt;br&gt;
业务层 → 持久层：业务层通过调用持久层的接口（如Repository）来访问和操作数据库。&lt;br&gt;
持久层 → 数据库：持久层通过JPA、MyBatis或JDBC等技术与数据库进行交互。&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单的流程示例：
&lt;ul&gt;
&lt;li&gt;用户通过浏览器发起HTTP请求。&lt;/li&gt;
&lt;li&gt;控制器（Controller）接收请求，调用业务层（Service）的方法。&lt;/li&gt;
&lt;li&gt;业务层（Service）处理逻辑，并可能调用持久层（Repository）进行数据库操作。&lt;/li&gt;
&lt;li&gt;持久层（Repository）查询数据库或更新数据。&lt;/li&gt;
&lt;li&gt;业务层（Service）将结果返回给控制器（Controller）。&lt;/li&gt;
&lt;li&gt;控制器（Controller）将结果传递给视图层（View），并最终展示给用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;springboot&#34;&gt;SpringBoot
&lt;/h2&gt;&lt;h2 id=&#34;mybatisplus&#34;&gt;MyBatisPlus
&lt;/h2&gt;&lt;p&gt;新增&lt;br&gt;
删除&lt;br&gt;
修改&lt;br&gt;
根据id查询&lt;br&gt;
查询全部&lt;br&gt;
分页查询（配置拦截器）&lt;br&gt;
按条件查询&lt;br&gt;&lt;/p&gt;
&lt;p&gt;代码生成器（快速搭建框架）&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;项目描述&#34;&gt;项目描述：
&lt;/h2&gt;&lt;p&gt;瑞吉外卖是一款专门为餐饮企业（餐厅、饭店）定制的软件产品，包括系统管理后台和移动端应用两部分。系统管理后台主要提供给餐饮企业内部员工使用，用于对餐厅的分类、菜品、套餐、订单、员工等进行管理维护。移动端应用主要提供给消费者使用，可以在线浏览菜品、添加购物车、下单等。&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发环境：
环境(软件): JDK +MySQL +IDEA+Git+Tomcat&lt;br&gt;
技术: Spring Boot、SSM、Mybatis Plus、Spring Security、Redis、Spring Cache、Swagger、Linux、ShardingJDBC、Nginx&lt;/li&gt;
&lt;li&gt;责任描述：
&lt;ul&gt;
&lt;li&gt;负责系统管理后台的员工、分类、菜品、套餐模块的编写。&lt;/li&gt;
&lt;li&gt;负责移动端应用的开发，实现短信验证码登录功能。&lt;/li&gt;
&lt;li&gt;开发移动端应用的菜品浏览功能，使用户可以方便地浏览菜品信息。&lt;/li&gt;
&lt;li&gt;实现移动端应用中用户地址簿信息的管理功能，方便用户管理收货地址。&lt;/li&gt;
&lt;li&gt;开发移动端应用的购物车功能，使用户可以方便地添加菜品到购物车并管理订单。&lt;/li&gt;
&lt;li&gt;实现移动端应用中提交订单的功能，确保用户能够成功下单。&lt;/li&gt;
&lt;li&gt;进行移动端应用的数据展示缓存优化，提高系统的响应速度和用户体验。&lt;/li&gt;
&lt;li&gt;负责数据库主从配置以及读写分离的实现，提高数据库的性能和可靠性。&lt;/li&gt;
&lt;li&gt;实现项目接口API文档生成功能，使用Swagger生成清晰明了的接口文档。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;技术描述：
&lt;ul&gt;
&lt;li&gt;使用Redis缓存高频数据，并使用Spring Cache优化代码，提高系统的性能和响应速度。&lt;/li&gt;
&lt;li&gt;在整个开发过程中使用Linux系统进行部署，充分利用Linux系统的稳定性和安全性。&lt;/li&gt;
&lt;li&gt;使用Nginx部署前端项目，实现前后端分离的部署方式，提高系统的灵活性和可维护性。&lt;/li&gt;
&lt;li&gt;使用Nginx实现反向代理和负载均衡，提高系统的并发处理能力和可用性。&lt;/li&gt;
&lt;li&gt;使用ShardingJDBC实现数据库读写分离，提高数据库的读取性能和写入性能。&lt;/li&gt;
&lt;li&gt;使用Spring Security框架进行权限模块的开发，采用经典的RBAC模型进行精细的权限管理。&lt;/li&gt;
&lt;li&gt;使用YApi实现前后端分离开发，并使用Swagger生成接口API文档，提高团队的协作效率。&lt;/li&gt;
&lt;li&gt;使用Git进行项目的版本控制和代码管理，充分利用分支功能进行项目优化和问题修复。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我创建的一个springboot项目，其目录结构包含如下组成部分：
common、
config、
controller、
dto、
entity、
filter、
mapper、
service、
utils、
我各个层次的功能。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Controller 接收请求，调用 Service 层处理业务逻辑。&lt;br&gt;
Service 层调用 Mapper 层进行数据库操作。&lt;br&gt;
Mapper 层操作 Entity 对象，与数据库交互。&lt;br&gt;
DTO 用于在 Controller 和 Service 之间传递数据。&lt;br&gt;
Utils 和 Common 提供通用的工具和常量，供其他层级使用。&lt;br&gt;
Config 定义全局配置，Filter 处理请求和响应的拦截逻辑。&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;common：
&lt;ul&gt;
&lt;li&gt;功能：存放项目中通用的工具类、常量、枚举、异常处理等。&lt;/li&gt;
&lt;li&gt;示例：自定义异常类、全局常量、通用工具类等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;config：
&lt;ul&gt;
&lt;li&gt;功能：存放项目的配置类，用于配置Spring Boot应用的各种行为。&lt;/li&gt;
&lt;li&gt;示例：数据库配置、安全配置、Swagger配置、自定义Bean配置等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;controller：
&lt;ul&gt;
&lt;li&gt;功能：负责处理HTTP请求，接收前端传递的参数，调用Service层处理业务逻辑，并返回结果。&lt;/li&gt;
&lt;li&gt;示例：RESTful API接口、请求参数校验、返回JSON数据等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;dto：
&lt;ul&gt;
&lt;li&gt;功能：存放数据传输对象（Data Transfer Object），用于在不同层之间传递数据，通常用于封装请求和响应的数据。&lt;/li&gt;
&lt;li&gt;示例：前端传递的请求参数封装、返回给前端的响应数据封装等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;entity：
&lt;ul&gt;
&lt;li&gt;功能：存放与数据库表对应的实体类，通常使用JPA或MyBatis等ORM框架进行映射。&lt;/li&gt;
&lt;li&gt;示例：数据库表的实体类，包含字段、getter/setter方法等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;filter：
&lt;ul&gt;
&lt;li&gt;功能：存放过滤器类，用于在请求到达Controller之前或响应返回客户端之前进行一些处理，如日志记录、权限校验等。&lt;/li&gt;
&lt;li&gt;示例：自定义过滤器、拦截器等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mapper：
&lt;ul&gt;
&lt;li&gt;功能：存放与数据库交互的接口或类，通常使用MyBatis或JPA进行数据库操作。&lt;/li&gt;
&lt;li&gt;示例：MyBatis的Mapper接口、JPA的Repository接口等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;service：
&lt;ul&gt;
&lt;li&gt;功能：负责业务逻辑的处理，通常被Controller层调用，并调用Mapper层进行数据持久化操作。&lt;/li&gt;
&lt;li&gt;示例：业务逻辑处理、事务管理、调用Mapper层接口等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;utils：
&lt;ul&gt;
&lt;li&gt;功能：存放项目中常用的工具类，提供一些通用的方法供其他模块调用。&lt;/li&gt;
&lt;li&gt;示例：日期处理工具类、字符串处理工具类、加密解密工具类等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后端代码部署tomcat&lt;br&gt;
前端代码部署nginx&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;docker相关配置与命令&#34;&gt;docker相关配置与命令
&lt;/h2&gt;&lt;p&gt;docker源：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;https://registry.docker-cn.com&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;http://f1361db2.m.daocloud.io&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;https://dockerhub.azk8s.cn&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;https://docker.mirrors.ustc.edu.cn&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;https://ud6340vz.mirror.aliyuncs.com&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;https://reg-mirror.qiniu.com&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;https://hub-mirror.c.163.com&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;https://mirror.ccs.tencentyun.com&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;docker自定义tag:
&lt;code&gt;docker tag local-image:tagname new-repo:tagname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;docker镜像上传到hub:&lt;/li&gt;
&lt;li&gt;docker push new-repo:tagname&lt;/li&gt;
&lt;li&gt;查看容器ip：&lt;/li&gt;
&lt;li&gt;docker inspect &amp;ndash;format=&amp;rsquo;{{.NetworkSettings.IPAddress}}&amp;rsquo; mysql-slave&lt;br&gt;&lt;/li&gt;
&lt;li&gt;启动redis容器：docker run &amp;ndash;name docker-redis -it -p 6379:6379 -v /data/redis-data  ayljzj/redis:7.4.2 &amp;ndash;requirepass &amp;ldquo;123456&amp;rdquo;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;启动mysql容器：docker run &amp;ndash;name mysql- -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d ayljzj/mysql:8.0.41&lt;br&gt;
进入容器内部： docker exec -it &lt;container&gt; bash
CREATE USER &amp;lsquo;slave&amp;rsquo;@&amp;rsquo;%&amp;rsquo; IDENTIFIED BY &amp;lsquo;123456&amp;rsquo;;
GRANT REPLICATION SLAVE ON &lt;em&gt;.&lt;/em&gt; TO &amp;lsquo;slave&amp;rsquo;@&amp;rsquo;%&amp;rsquo;;
CHANGE REPLICATION SOURCE TO SOURCE_HOST=&amp;lsquo;172.17.0.2&amp;rsquo;,SOURCE_PORT=3306,SOURCE_USER=&amp;lsquo;slave&amp;rsquo;,SOURCE_PASSWORD=&amp;lsquo;123456&amp;rsquo;,SOURCE_LOG_FILE=&amp;lsquo;mysql-bin.000003&amp;rsquo;,SOURCE_LOG_POS=157;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CHANGE MASTER TO MASTER_HOST=&amp;#39;172.17.0.2&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MASTER_USER=&amp;#39;slave&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MASTER_PASSWORD=&amp;#39;123456&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MASTER_PORT=3306, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MASTER_LOG_FILE=&amp;#39;mysql-bin.000001&amp;#39;,MASTER_LOG_POS=684;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#解释：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 	CHANGE MASTER TO MASTER_HOST=&amp;#39;主机的IP地址&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#	MASTER_USER=&amp;#39;slave&amp;#39;(刚刚配置的用户名),
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#	MASTER_PASSWORD=&amp;#39;123456&amp;#39;(刚刚授权的密码),
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#	master_port=主机开放的端口 我这里是3310端口,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#	MASTER_LOG_FILE=&amp;#39;mysql-bin.具体数字&amp;#39;,MASTER_LOG_POS=具体值(之前的Position);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;创建Docker网络
docker network create mysql-net&lt;/p&gt;
&lt;p&gt;启动主数据库
docker run -d &amp;ndash;name mysql-master -p 3306:3306 &amp;ndash;network mysql-net -e MYSQL_ROOT_PASSWORD=root -d ayljzj/mysql:8.0.41&lt;/p&gt;
&lt;p&gt;启动从数据库
docker run -d &amp;ndash;name mysql-slave -p 3307:3306 &amp;ndash;network mysql-net -e MYSQL_ROOT_PASSWORD=root -d ayljzj/mysql:8.0.41&lt;/p&gt;
&lt;h2 id=&#34;redis&#34;&gt;redis
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.redis.net.cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;中文官网&lt;/a&gt;&lt;br&gt;
进入路径：/usr/local/redis-4.0.0/src&lt;br&gt;
运行命令：src/redis-server ./redis.conf&lt;br&gt;
修改为后台运行：/usr/local/redis-4.0.0/redis.conf&lt;br&gt;
配置修改：daemonize yes&lt;br&gt;
密码：123456&lt;br&gt;
退出：redis-cli -h 你的IP地址 -p 你的redis端口号 shutdown&lt;br&gt;
设置允许远程链接：127.0.0.1添加注释#&lt;br&gt;
./redis-cli.exe -h 192.168.179.135 -p 6379 -a 123456&lt;br&gt;
关闭防火墙：firewall-cmd &amp;ndash;zone=public &amp;ndash;add-port=6379/tcp &amp;ndash;permanent   &lt;br&gt;
重启防火墙：firewall-cmd &amp;ndash;reload&lt;br&gt;
关机：shutdown -h now&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;redis-1&#34;&gt;redis
&lt;/h2&gt;&lt;p&gt;启动数据库：systemctl start mysqld&lt;br&gt;
update user set authentication_string=passworD(&amp;ldquo;root&amp;rdquo;) where user=&amp;lsquo;root&amp;rsquo;;&lt;br&gt;
–name:容器名称&lt;br&gt;
-p 6379:6379 将端口设置为6379&lt;br&gt;
-it参表示控制台显示Redis安装的交互信息&lt;br&gt;
如果后台运行，用-d参数&lt;br&gt;
-v /data/redis-data 将redis数据挂载到根目录的 /data/redis-data 目录下&lt;br&gt;
-v $PWD/data/redis-data 将redis数据挂载到当前目录的data/redis-data 目录下&lt;br&gt;
–requitepass “123456” : 指定redis连接密码，此参数要放在镜像名后面&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;nginx&#34;&gt;Nginx
&lt;/h2&gt;&lt;p&gt;安装依赖：yum -y install gcc pcre-devel zlib-devel openssl openssl-devel&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;windows下docker的mysql57主从辅助一主一从&#34;&gt;Windows下docker的Mysql（5.7）主从辅助（一主一从）
&lt;/h2&gt;&lt;h3 id=&#34;1拉取mysql镜像&#34;&gt;1、拉取Mysql镜像
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker pull mysql:5.7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2启动mysql容器&#34;&gt;2、启动Mysql容器
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;先启动mysql-master容器：（即之后的主机）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 --name mysql-master ayljzj/mysql:5.7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;先启动mysql-slave容器：（即之后的从机）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -d -p 3307:3306 -e MYSQL_ROOT_PASSWORD=123456 --name mysql-slave ayljzj/mysql:5.7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;命令解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-d： 后台运行容器，并返回容器ID&lt;/li&gt;
&lt;li&gt;-p 3307:3306 ：将容器的3306端口映射到宿主机3307端口&lt;/li&gt;
&lt;li&gt;–name mysql-slave：将容器命名为mysql-slave&lt;/li&gt;
&lt;li&gt;-e MYSQL_ROOT_PASSWORD=123456 ：配置数据库连接密码&lt;/li&gt;
&lt;li&gt;ayljzj/mysql:5.7：使用该镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3编写主从复制文件&#34;&gt;3、编写主从复制文件
&lt;/h3&gt;&lt;h4 id=&#34;对主库文件进行如下配置&#34;&gt;对主库文件进行如下配置：
&lt;/h4&gt;&lt;p&gt;找到file中的/etc/my.cnf文件，将以下内容复制进去&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[mysqld]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#主服务器唯一ID
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server-id=1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#启用二进制日志
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;log-bin=mysql-bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 设置不要复制的数据库(可设置多个)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;binlog-ignore-db=mysql
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;binlog-ignore-db=information_schema
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#设置需要复制的数据库 需要复制的主数据库名字
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;binlog-do-db=testdb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#设置logbin格式
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;binlog_format=STATEMENT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;对从库文件进行如下配置&#34;&gt;对从库文件进行如下配置：
&lt;/h4&gt;&lt;p&gt;找到file中的/etc/my.cnf文件，将以下内容复制进去&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#从服务器唯一ID,必须要与主服务器不同
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server-id=2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#启用中继日志
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;relay-log=mysql-relay
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;4搭建主从复制&#34;&gt;4、搭建主从复制
&lt;/h3&gt;&lt;h4 id=&#34;41主机设置&#34;&gt;4.1、主机设置
&lt;/h4&gt;&lt;p&gt;进入主机容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker exec -it mysql-master bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;连接容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mysql -uroot -p123456
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;42主机上建立帐户并授权slave&#34;&gt;4.2、主机上建立帐户并授权（slave）
&lt;/h4&gt;&lt;p&gt;给从机授权，为了让从机能够和主机连接起来。
创建账户：slave，设置密码：123456&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CREATE USER &amp;#39;slave&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;123456&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对slave账户进行授权&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GRANT REPLICATION SLAVE ON *.* TO &amp;#39;slave&amp;#39;@&amp;#39;%&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或者二者代码写为一行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GRANT REPLICATION SLAVE ON *.* TO &amp;#39;slave&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;123456&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;GRANT REPLICATION SLAVE ON &lt;em&gt;.&lt;/em&gt; TO &amp;lsquo;slave&amp;rsquo;@&amp;rsquo;%&amp;rsquo; IDENTIFIED BY &amp;lsquo;123456&amp;rsquo;;&lt;/p&gt;
&lt;h4 id=&#34;43查询master状态&#34;&gt;4.3、查询master状态
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;show master status; #查询master的状态
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;记录出现的File和Position的值，后续要用&lt;br&gt;
注意：此步骤后不要再操作主服务器MySQL，防止主服务器状态值变化!&lt;/p&gt;
&lt;h4 id=&#34;44从机设置&#34;&gt;4.4、从机设置
&lt;/h4&gt;&lt;p&gt;进入从机容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker exec -it mysql-slave bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mysql -uroot -p123456
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;进入容器后输入以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CHANGE MASTER TO MASTER_HOST=&amp;#39;主机的ip地址&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MASTER_USER=&amp;#39;slave&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MASTER_PASSWORD=&amp;#39;123456&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MASTER_PORT=3306, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MASTER_LOG_FILE=&amp;#39;mysql-bin.000003&amp;#39;,MASTER_LOG_POS=438;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#解释：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 	CHANGE MASTER TO MASTER_HOST=&amp;#39;主机的IP地址&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#	MASTER_USER=&amp;#39;slave&amp;#39;(刚刚配置的用户名),
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#	MASTER_PASSWORD=&amp;#39;123456&amp;#39;(刚刚授权的密码),
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#	master_port=主机开放的端口 我这里是3310端口,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#	MASTER_LOG_FILE=&amp;#39;mysql-bin.具体数字&amp;#39;,MASTER_LOG_POS=具体值(之前的Position);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;若在这里出现错误，先执行完下面两条命令重置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stop slave;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;reset master;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;完成后，启动从服务器复制功能&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;start slave;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;查看从服务器状态&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;show slave status\G
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;观察输出的结果，下面两个参数都是Yes，则说明主从配置成功！&lt;br&gt;
Slave_IO_Running: Yes,Slave_SQL_Running: Yes&lt;br&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>java资源与介绍</title>
        <link>https://ayljzj520.github.io/p/java%E8%B5%84%E6%BA%90%E4%B8%8E%E4%BB%8B%E7%BB%8D/</link>
        <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
        
        <guid>https://ayljzj520.github.io/p/java%E8%B5%84%E6%BA%90%E4%B8%8E%E4%BB%8B%E7%BB%8D/</guid>
        <description>&lt;img src="https://ayljzj520.github.io/p/java%E8%B5%84%E6%BA%90%E4%B8%8E%E4%BB%8B%E7%BB%8D/Amain.jpg" alt="Featured image of post java资源与介绍" /&gt;&lt;blockquote&gt;
&lt;p&gt;“Work！ ”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://xiaolincoding.com/interview/java.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java八股&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;1jdk下载&#34;&gt;1、JDK下载
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.injdk.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;JDK下载&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;2编辑器下载&#34;&gt;2、编辑器下载
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jetbrains.com.cn/idea/download/?section=windows&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;font color=blue&gt;IDEA&lt;/font&gt;&lt;/a&gt;&amp;mdash;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_46485638/article/details/134891162&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;font color=blue&gt;IDEA教程&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com/Download&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;font color=blue&gt;VS_code&lt;/font&gt;&lt;/a&gt;&amp;mdash;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/msdcp/article/details/127033151&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;font color=blue&gt;VS_code教程&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;3maven安装&#34;&gt;3、maven安装
&lt;/h2&gt;&lt;p&gt;前往&lt;a class=&#34;link&#34; href=&#34;https://maven.apache.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;font color=blue&gt;阿帕奇官网&lt;/font&gt;&lt;/a&gt;，下载apache-maven-3.9.6-bin.zip，
解压缩到本地指定文件夹即可
国内Maven需要调整指定源为阿里云，修改setting.xml文件为如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nt&#34;&gt;&amp;lt;mirror&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 指定镜像ID（可自定义名称） --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;Aliyun&lt;span class=&#34;nt&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 匹配中央仓库（不可修改）--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;mirrorOf&amp;gt;&lt;/span&gt;central&lt;span class=&#34;nt&#34;&gt;&amp;lt;/mirrorOf&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 指定镜像名称（可自定义名称）  --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Aliyun&lt;span class=&#34;nt&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 指定镜像路径（镜像地址） --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;span class=&#34;nt&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/mirror&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意 3.9.6版本Maven默认开启禁止禁止http远端仓库，需将如下配置注释后，阿里云镜像才会生效&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;mirror&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;maven-default-http-blocker&lt;span class=&#34;nt&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;mirrorOf&amp;gt;&lt;/span&gt;external:http:*&lt;span class=&#34;nt&#34;&gt;&amp;lt;/mirrorOf&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Pseudo repository to mirror external repositories initially using HTTP.&lt;span class=&#34;nt&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://0.0.0.0/&lt;span class=&#34;nt&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;blocked&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/blocked&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/mirror&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;完成后将Maven添加到ieda中。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
