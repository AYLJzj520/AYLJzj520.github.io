[{"content":" “手机配置！”\n工欲善其事，必先利其器\n正如古语所言：“工欲善其事，必先利其器。”在手机重装系统后，迅速恢复工作环境并减少不必要的配置时间，是提升效率的关键。为了确保手机系统稳定、安全且便捷地运行，以下是一份基础软件清单，帮助你快速配置手机，提升日常使用体验。\n手机基础配置 关闭拓展内存 关闭广告 1、聊天软件 QQ：【下载链接】 微信：【下载链接】 飞书：【下载链接】 钉钉：【下载链接】 2、办公学习软件 文件处理 WPS：【下载链接】 远程工具 向日葵：【下载链接】 ToDesk：【下载链接】 3、常用软件 浏览器 Edge：【下载链接】 Chrome：【下载链接】 网盘 阿里云盘：【下载链接】 百度云盘：【下载链接】 123云盘：【下载链接】 夸克云盘：【下载链接】 视频软件 B站：【下载链接】 抖音：【下载链接】 密码管理 Keepass：【下载链接】 其他 Clash：【下载链接】 Hiddify：【下载链接】 5、游戏软件 游戏平台 Steam：【下载链接】 海岛奇兵 游戏基础运行安装 Hiddify：【下载链接】 Clash：【下载链接】 无界趣连：【下载链接】 相关脚本 查序列替换包：【下载链接】 国际服养号：【下载链接】 航母脚本：【下载链接】 卡首雕脚本：【下载链接】 梦想脚本：【下载链接】 梦想模拟雕像：【下载链接】 雪花断网：【下载链接】 其他 aaa ","date":"2025-02-04T00:00:00Z","image":"https://ayljzj520.github.io/p/%E6%96%B0%E6%89%8B%E6%9C%BA%E5%88%B0%E6%89%8B%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/Amain_hu4228857548223767547.jpg","permalink":"https://ayljzj520.github.io/p/%E6%96%B0%E6%89%8B%E6%9C%BA%E5%88%B0%E6%89%8B%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/","title":"新手机到手安装软件"},{"content":" “DIY PC！”\n前言 接下来将阐述我自己组装的电脑配件，以及相关配件当时的价格，以及后续配置升级的相关硬件的处理。\n电脑硬件配置 1、处理器 (CPU) 买入(i3 12100f)(i5 12400f) 支出：475.8+780=1255.8 卖出：(i3 12100f) 收入：475 总支出：780.5 2、主板 (Motherboard) 买入(微星B660迫击炮WIFI版) 总支出：979 3、内存 (RAM) 买入(金百达银爵32G*2 DDR4 3600) 总支出：315+308.8=623.8 4、显卡 (GPU) 买入(索泰2070S 8G)(映众760 2G)(讯景6750Gre海外版12G) 支出：1303+130+2099=3532 卖出：(索泰2070S 8G)(映众760 2G) 收入：1000+135=1135 总支出：2397 5、硬盘 固态硬盘 (SSD) 买入(致态TiPlus 5000 1TB)(幻影Hv2000 1TB) 支出：416.5+244.21=660.21 机械硬盘 (HDD) 买入(海康机械ST4X015垂直盘)(二手机械) 支出：399.18+16=415.18 还有一些其它的二手机械盘，送给同学了就不记录了 总支出：660.21+415.18=1075.39 6、电源 (PSU) 买入(海韵G12 GC850 金牌直出) 支出：547 总支出：547 7、散热器 (Cooler) 买入(利民PA120SE ARGB)(利民公包TL-C12C无灯)(积木风扇 三正三反) 支出：141.16+11.8*6+110=321.96 总支出：321.96 8、机箱 买入(先马朱雀air)(半岛铁盒F20 【已丢】)(积木风扇 三正三反) 支出：145.02+184.83+159=488.85 卖出：(先马朱雀air) 收入：50 和6把利民风扇一起打包便宜给同学了 总支出：438.85 外设 1、显示器 买入(翔野显示器【纯垃圾，坏了，已丢】)(泰坦军团) 支出：837.1+518.98=1356.28 总支出：1356.28 2、键鼠 买入(罗技GPW1代)(RK R75) 支出：339+163.98=402.98 总支出：402.98 最终总支出：780.5+979+623.8+2397+1075.39+547+\n321.96+438.85+1356.28+402.98=8922.76 写到最后才知道自己原本是想简单的装一台电脑，为了方便以后的升级，因此把主板与电源留了比较大的阈值，但是实际上到写这篇笔记的时候，装机已经完成了一年半左右，对于显卡与CPU的更换实际没有达到更高的地步。\n因此在装机的时候，一定要明确自己的需求，确定好配置，不然后期修改配置的话，费事费力又费钱，不过这台电脑全程是我自己装的。嘿嘿，人工费为0。\n对于这台电脑的安装我也是很高兴的，对于我来说他的价值足够了！！！\n","date":"2025-01-23T00:00:00Z","image":"https://ayljzj520.github.io/p/%E7%BB%84%E8%A3%85%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91/Amain_hu3851717235060608261.jpg","permalink":"https://ayljzj520.github.io/p/%E7%BB%84%E8%A3%85%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91/","title":"组装个人电脑"},{"content":" “云盘使用！”\n引言 网盘是一种基于云存储的服务，允许用户上传、存储、管理和分享文件，方便用户随时随地访问自己的文件。\n在现代生活中，随着数据量的激增，传统的存储方式（如USB闪存、硬盘等）已经不能满足快速增长的需求，而网盘凭借着云存储的特点，成为了许多人的首选。\n而我使用网盘的有三大原因：\n及时备份重要文件，防止数据丢失。 多设备间同步文件，方便在不同设备间访问。 分享文件时更便捷，不必通过等传统方式。 同时，除了云盘我也介绍一下我使用的其它存储方式。\n1. 百度网盘 特点:\n百度网盘个人免费版基础容量2TB，容量很大，也有很多分享的资源，但是就是下载限速。 个人使用方式:\n存一些别人分享的资源，将自己备份文件存储一份。 2. 阿里云盘 特点:\n以“速度不限”为主打亮点，但是还是略有限速，不过比百度网盘来说还是好多了。 个人使用方式:\n存一些别人分享的资源，将自己备份文件存储一份。 3. iCloud 特点:\n苹果用户使用，但免费存储空间仅5GB，国内访问偶尔有延迟。 个人使用方式:\n存储一下就iPhone上的照片等。 4. OneDrive 特点:\n微软的云存储，个人版通过邀请后有5GB空间，与Windows深度集成，只要登陆账号就可在多设备共享，但是访问速度一般。 个人使用方式:\n存储一些日常上的文件，在两台电脑上的文件共享。 5. 坚果云 特点:\n主打办公文件同步，强调稳定和可靠性，支持多平台、WebDAV 协议，兼容多种第三方工具，数据加密传输，隐私保障较好。但是共享流量极少。 个人使用方式:\n存储keepass的密码文件。 6. 天翼云盘（已弃用） 特点:\n中国电信推出，针对国内用户，支持积分兑换存储空间。强调安全存储，部分资源可离线下载。提供较大的初始免费存储容量。 优点:\n国内网络访问速度快，上传下载流畅。适合存储个人照片、文档等文件。免费用户初始空间大，运营商联动优惠多。 缺点:\n功能较传统，分享体验一般。界面设计老旧，用户体验一般。第三方平台兼容性弱。\n看着挺好的，但是不适合我的使用。 7. 123云盘 特点:\n新兴云盘服务，主打无广告、无速度限制。上传、下载速度快，且免费用户也无速度限制。分享体验较好，可设置提取码或直接分享链接。但是现在每天下载流量有限制。 个人使用方式:\n将自己备份文件存储一份。 8. 蓝奏云盘 特点:\n主打轻量文件存储与分享，界面极简。免费用户无容量限制（单文件限制100MB）。不支持大文件上传，适合小型文件传输。分享的文件可以不用登陆直接下载（神中神）。 个人使用方式:\n存储一些自己的小文件，方便自己的下载与分享。 9. 垃圾机械盘 特点:\n自己买的几十块钱500G的垃圾二手机械盘，贼便宜，就是使用时间很久了，随时都有可能寄。 个人使用方式:\n存储一些临时的文件，充当下载盘。就算盘寄了也不心疼。 10. U盘 特点:\n便携式存储设备，适合小文件快速传输。插入电脑即可使用，兼容性强。小巧便携，随时传输数据。反复使用，经济耐用。 个人使用方式:\n用于本人两台电脑间，以及和其它电脑临时的数据共享。 ","date":"2025-01-21T00:00:00Z","image":"https://ayljzj520.github.io/p/%E4%B8%AA%E4%BA%BA%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/Amain_hu16818473676530701663.jpg","permalink":"https://ayljzj520.github.io/p/%E4%B8%AA%E4%BA%BA%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/","title":"个人数据存储"},{"content":" “电脑配置！”\n工欲善其事，必先利其器\n每次重装操作系统，我们都希望能迅速恢复工作环境，减少不必要的配置时间。正如古语所说：“工欲善其事，必先利其器”，只有准备好合适的工具，才能高效地完成任务。在电脑重装后的初期，我们需要下载并安装一系列基础软件，确保系统稳定、安全、便捷地运行。\n本文将为你提供一份基础软件清单，帮助你快速配置并提升个人电脑的工作效率。\n电脑基础配置 win11跳过激活：\n1 ppbe\\bypassnro 必须关闭bitlocker 通过开始菜单的[设置]-[更新和安全]-[设备加密]，点击 [关闭]。\n或者\n通过控制面板或“这台电脑”找到要关闭加密的磁盘，右键点击 [管理 BitLocker]，选择 [关闭 BitLocker] 电脑必须检查删除McAfee软件 删除defender软件:【下载链接】\n分区助手：【下载链接】 微软常用运行库：【下载链接】 英伟达显卡驱动：【下载链接】 AMD显卡驱动：【下载链接】 联想驱动管理：【下载链接】 1、聊天软件 【必装】\nQQ：【下载链接】 微信：【下载链接】 企业微信：【下载链接】 TIM：【下载链接】 TIM绿色精简化版：【下载链接】 腾讯会议：【下载链接】 飞书：【下载链接】 钉钉：【下载链接】 2、办公学习软件 文件处理【必装】 WPS：【下载链接】 2019Office：【下载链接】 Acrobat（PDF编辑）：【下载请挂梯】 Visio：【下载链接】 远程工具【必装】 向日葵：【下载链接】 ToDesk：【下载链接】 学习软件 ChatGpt：【下载链接】 MathType：【下载链接】 Zotero：【下载链接】 3、常用软件 浏览器【必装】 浏览器必备IDM：【下载链接】 Edge：【下载链接】 Chrome：【下载链接】 火狐浏览器：【下载链接】 网盘【必装】 阿里云盘：【下载链接】 百度云盘：【下载链接】 百度云盘去广告精简版：【下载请挂梯】 123云盘：【下载链接】 夸克云盘：【下载链接】 蜗牛云盘：【下载请挂梯】 视频软件【必装】 OBS：【下载链接】 Potplayer：【下载链接】 剪映：【下载链接】 压缩工具【选一安装】 Bandzip：【下载链接】 WinRar：【下载链接】 7-zip：【下载链接】 卸载工具【必装】 geek：【下载链接】 Uninstall：【下载链接】 IObitUninstaller：【下载链接】 密码管理【必装】 Keepass：【下载链接】 其他 火绒：【下载链接】 Clash：【下载链接】 Hiddify：【下载链接】 v2RayN：【下载链接】 比特彗星：【下载链接】 4、开发工具 Git：【下载链接】 idea激活插件：【下载链接】 visual Studio：【下载链接】 VS Code：【下载链接】 Obsidian：【下载请挂梯】 5、游戏软件 游戏平台 Epic：【下载链接】 Steam：【下载链接】 战网：【下载链接】 海岛奇兵 游戏基础运行安装 Hiddify：【下载链接】 7723：【下载链接】 Clash：【下载链接】 雷电模拟器9：【下载链接】 录音啦：【下载链接】 无界趣连：【下载链接】 相关脚本 查序列替换包：【下载链接】 国际服养号：【下载链接】 航母脚本：【下载链接】 卡首雕脚本：【下载链接】 梦想脚本：【下载链接】 梦想模拟雕像：【下载链接】 雪花断网：【下载链接】 其他 城市天际线：【下载链接】 罗技驱动：【下载链接】 APEX宏文件：【下载链接】 ","date":"2025-01-19T00:00:00Z","image":"https://ayljzj520.github.io/p/%E7%94%B5%E8%84%91%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/Amain_hu5941754247453116152.jpg","permalink":"https://ayljzj520.github.io/p/%E7%94%B5%E8%84%91%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/","title":"电脑软件配置"},{"content":" “Hugo！”\n","date":"2025-01-19T00:00:00Z","image":"https://ayljzj520.github.io/p/%E5%8D%97%E4%BA%AC%E6%B8%B8%E7%8E%A9%E8%AE%B0%E5%BD%95/Amain_hu9548342364818229092.jpg","permalink":"https://ayljzj520.github.io/p/%E5%8D%97%E4%BA%AC%E6%B8%B8%E7%8E%A9%E8%AE%B0%E5%BD%95/","title":"南京游玩记录"},{"content":" “Hugo！”\n1、显示文章更新时间 (1) 在配置文件 hugo.yaml 中加入以下配置 1 2 3 4 5 6 7 8 # 更新时间：优先读取git时间 -\u0026gt; git时间不存在，就读取本地文件修改时间 frontmatter: lastmod: - :git - :fileModTime # 允许获取Git信息\tenableGitInfo: true (2) 修改github action文件.github/workflows/xxx.yaml，在运行 hugo -D 命令的step前加入以下配置 1 2 3 4 5 6 7 8 9 jobs: deploy: steps: - name: Git Configuration run: | git config --global core.quotePath false git config --global core.autocrlf false git config --global core.safecrlf true git config --global core.ignorecase false (3) 这样就提交代码时，就会去读取git时间，来更新文章的更新时间 (4) 若想在文章开头就显示更新时间，修改layouts/partials/article/components/detail.html，在指定位置引入以下代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;div class=\u0026#34;article-details\u0026#34;\u0026gt; ... \u0026lt;footer class=\u0026#34;article-time\u0026#34;\u0026gt; ... \u0026lt;!-- 更新时间 --\u0026gt; {{- if ne .Lastmod .Date -}} \u0026lt;div class=\u0026#34;article-lastmod\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;clock\u0026#34; }} \u0026lt;time\u0026gt; {{ .Lastmod.Format ( or .Site.Params.dateFormat.lastUpdated \u0026#34;Jan 02, 2006 15:04 MST\u0026#34; ) }} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{- end -}} .... \u0026lt;/footer\u0026gt; ... \u0026lt;/div\u0026gt; 这样就会文章开头显示修改时间\ntips: 更新时间的格式去 hugo.yaml 中的 params.dateFormat.lastUpdated 进行修改 2、友链、归档多列显示 修改assets/scss/custom.scss文件(不存在则自行创建)，引入以下css样式代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @media (min-width: 1024px) { .article-list--compact { display: grid; // 目前是两列，如需三列，则后面再加一个1fr，以此类推 grid-template-columns: 1fr 1fr; background: none; box-shadow: none; gap: 1rem; article { background: var(--card-background); border: none; box-shadow: var(--shadow-l2); margin-bottom: 8px; margin-right: 8px; border-radius: 16px; } } } ","date":"2025-01-13T00:00:00Z","image":"https://ayljzj520.github.io/p/hugostack%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BF%AE%E6%94%B9/Amain_hu4362935966078285323.jpg","permalink":"https://ayljzj520.github.io/p/hugostack%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BF%AE%E6%94%B9/","title":"【hugo】Stack主题自定义修改"},{"content":" “Play！”\n1、环境准备 1.1 Git下载 前往【Git官网】，下载安装程序 一直点下一步，默认安装即可 1.2 Hugo下载 前往【Hugo Github Tags】，选择对应版本下载，下载后解压即可 Windows下载版本：hugo_extended_xxxxx_windows_amd64.zip 2、搭建博客 2.1 创建博客 （1）在hugo.exe所在文件夹的地址栏敲打cmd，然后Enter唤起命令行 （2）敲打命令hugo new site xxxx创建hugo文件 （3）敲打命名cd xxxx切换目录，并把hugo.exe复制到刚生成的文件夹中 （4）敲打命令hugo server -D启动服务，访问http://localhost:1313，Ctrl+C停止服务 （hugo默认是没有主题的，需要进行主题配置） 2.2 配置主题 （1）前往【Hugo Themes】，查找自己喜欢的主题，进行下载 （2）这边以【Stack主题】为例，将下载好的主题解压，放到/themes文件夹中 （3）将exampleSite样例数据中的 Content 和 hugo.yaml 复制到主文件夹中，并删掉hugo.toml和content/post/rich-content （4）修改 hugo.yaml 中的 theme，将他修改为跟主题文件夹同名 （5）再次启动hugo服务，查看主题，具体主题配置修改 hugo.yaml，这里不细说，感兴趣可自行查找相关文章 3、Github部署 3.1 常规部署 （1）前往【Github官网】，创建仓库 {github用户名}.github.io （2）前往Setting -\u0026gt; Pages -\u0026gt; Branch选择main分支，然后保存，会自动开启 https://{github用户名}.github.io 的地址，这地址也是以后访问博客的地址 （3）回到hugo文件中，执行命令hugo -D，会生成 public 静态资源文件夹 （4）在 public 执行以下命令上传到github仓库上，第一次上传可能需要输入账号密码 1 2 3 4 5 6 git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin {你的github仓库地址} git push -u origin main （5）上传成功后访问 https://{github用户名}.github.io，成功搭建属于自己的Hugo博客 3.2 Github Action自动部署 （1）Github创建一个新的仓库，用于存放Hugo的主文件 （2）前往Setttings -\u0026gt; Developer Settings -\u0026gt; Personal access tokens，创建一个token(classic) （3）token选择永不过期，并勾选 repo 和 workflow 选项 （4）为保证安全，将生成的token，保存的仓库的变量中，前往Settings -\u0026gt; Secrets and variables -\u0026gt; Actions中设置 （5）在hugo主文件创建一个.github/workflows/xxxx.yaml文件，将以下内容复制进去，想具体了解更多，可查看【Github Action文档】 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 name: deploy # 代码提交到main分支时触发github action on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Web run: hugo -D - name: Deploy Web uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.你的token变量名 }} EXTERNAL_REPOSITORY: 你的github名/你的仓库名 PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: auto deploy （6）在hugo主文件创建.gitignore文件，来避免提交不必要的文件 1 2 3 4 5 6 7 # 自动生成的文件 public resources .hugo_build.lock # hugo命令 hugo.exe （7）将hugo的主文件上传到仓库，上传成功后会触发Github Action，来自动部署你的静态页面 1 2 3 4 5 6 git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin {你的github仓库地址} git push -u origin main ","date":"2025-01-12T00:00:00Z","image":"https://ayljzj520.github.io/p/hugo--github-%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/Amain_hu5036209731246305276.jpg","permalink":"https://ayljzj520.github.io/p/hugo--github-%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/","title":"Hugo + Github 免费部署自己的博客"},{"content":" “研究生！”\n085410 人工智能\n信息工程学院研究方向包括： 计算机视觉、语音信号处理与识别和自然语言处理。\n一、培养目标 本工程领域培养符合我国电子信息工程领域发展需求的应用型、复合型高层次工程技术和工程管理人才。经过培养达到以下具体要求：\n1．拥护中国共产党的领导，热爱祖国，遵纪守法，具有服务国家和人民的高度社会责任感、良好的职业道德与敬业精神、科学严谨的学习态度和求真务实的工作作风，身心健康。\n2．掌握从事电子、通信、控制、计算机、电气、软件、光电、仪器仪表等专业领域和网络空间安全、人工智能、虚拟现实、集成电路、大数据与云计算、物联网、生物信息、量子信息等新兴方向紧密关联的专业基础和前沿理论，熟悉电子信息专业领域的相关技术规范与标准，具有承担电子信息领域的技术开发与应用、工程设计与实施、技术攻关与改造、工程规划与管理等方面的专业技术工作的能力。\n3．熟练掌握一门外语，能够顺利阅读本专业领域的国内外科技文献资料，具有较好的外语写作能力和国际学术交流的能力，具备较开阔的国际视野。\n二、学习年限 学制3年,正常学习年限3年。全日制研究生学习年限最长不超过4年，非全日制研究生学习年限最长不超过5年。\n三、培养方式 1．硕士研究生培养应以职业需求为导向，以实践能力培养为重点，以产学结合为途径，加强实践基地建设，强化实践能力和创业能力培养；主要采取课程学习、专业实践、学位论文相结合的方式，重点培养研究生的职业素养与解决实际问题的能力；课程学习主要在校内完成，专业实践主要在实习单位完成。\n2．课程学习时间一般为1年，学位论文工作（课题研究和学位论文撰写）时间不少于1年。全日制专业学位硕士研究生专业实践时间累计不少于6个月。课程学习实行学分制，研究生应在学习年限内修满规定的学分，通过培养方案规定的课程学习和硕士学位论文答辩方能毕业，申请取得硕士学位。\n3．培养实行“双导师制”，由校内外双导师共同指导，以校内导师指导为主，校外导师参与实践过程、项目研究和论文等多个环节的指导工作。研究生导师（导师组）应全面关心和指导研究生的成长成才，指导研究生培养全过程。不仅负责制订研究生培养计划，指导开题、中期考核（筛选）、答辩、科学研究、科研实践和学位论文等工作，而且对研究生的学术素养、学术道德有引导、示范和监督的责任。\n4．学位论文选题应来源于专业实际或具有明确的专业技术背景。\n5．非全日制研究生培养方式可采取集中或分散学习方式进行，但培养质量和要求不能降低。可以采取灵活的课程授课方式，充分利用现代信息技术和教学手段，确保教学质量。\n四、课程设置与学分要求 课程设置略。\n研究生所修总学分不少于34学分。其中：课程学分不少于24学分（学位课学分不少于16学分，非学位课学分不少于8学分），必修环节10学分。研究生在导师指导下结合研究方向选择课程，制定培养计划。未完成课程学分和必修环节不予受理学位论文答辩申请。\n五、必修环节 1．创新创业教育和劳育（3学分）\n研究生创新创业教育活动旨在培养研究生创新实践能力，强化创业意识，引导研究生开展创新创业。创新创业教育累计共2学分。采取专题讲座、报告、经验交流会或参加各级各类竞赛等形式，开展研究生创新创业教育活动。主要采取以下几种方式审核学分：①听取创新创业类论坛、讲座或学术交流，研究生教学秘书审核签字，每6次计1学分；②取得以下创新创业业绩：省部级以上竞赛获奖1项、自主创设公司且取得营业执照或在省市级以上创新创业论坛上发表相应会议论文1篇，计2学分；③校级以上创新创业竞赛二等奖以上，计0.5学分/项。 劳育旨在激励和引导研究生树立崇尚劳动、热爱劳动的优秀品质，以劳树德、以劳增智、以劳促技、以劳强体、以劳育美、以劳创新，树立正确的劳动价值观。劳育共计1学分，主要以志愿者服务和劳动实践教育活动为主，由学院或学科点组织，学院备案，每学年累计满10小时及以上，计1学分。\n2．学术报告（1学分）\n要求研究生在读期间以主讲人身份在校内外学术会议上的学术报告，具体由学院或学科点统一组织和考核，安排应相对集中。\n3．开题报告（1学分）\n开题报告是研究生培养中最为关键的环节之一，它直接地关系到学位论文工作的进展和质量。要在论文选题上充分发挥导师的主导作用，应在研究生入学报到后尽早明确拟从事的方向及选题范围，制订学位论文工作计划，以便使研究生尽早进入科研实践。\n4．专业实践（5学分）\n专业学位研究生在学期间，必须保证不少于半年的专业实践，可采用集中实践与分段实践相结合的方式；应届本科毕业生的专业实践时间原则上不少于1年。在制订个人培养计划的同时，需制订专业学位研究生专业实践计划，明确实践学习的时间、地点及实践学习主题；每完成一次专业实践训练，研究生要撰写实践学习总结报告；专业实践的种类有：一是参加导师科研项目课题研究，提交研究报告，由导师审核、评分并签字，记1学分；二是参加校外企业单位、连续时间不少于3个月的实习实践，提交实习报告，由企业单位指导实习的负责人审核、评分、签字并加盖企业实习主管部门公章，记4学分。\n六、学位论文与答辩要求 1．在论文选题及研究方向范围内至少阅读文献30篇，其中外文文献不少于10篇，在学位论文参考文献中列出并在论文正文中标出。学位论文要求概念清楚、立论正确、论述严谨、计算正确、数据可靠，且层次分明、文笔简洁、流畅、图表清晰。学位论文应在调查研究的基础上，研究内容有一定学术价值，研究成果对国民经济发展有一定意义。围绕论文开展科研工作的时间不少于1年。\n2．学位论文评审结果合格方可答辩。\n3．学位基本要求按照学校下发的学位授予工作细则执行。\n七、其他要求 1．专业学位硕士研究生在读期间须以第一作者或导师第一作者研究生第二作者（署名第一单位为江西理工大学）公开发表本专业高水平学术论文1篇（以录用通知书为准），或者研究生在读期间取得下列学术成果之一：\n（1）获授权国家发明专利一件以上；\n（2）有一项技术方案被相关单位或企业所采用（以完整的技术方案和使用单位提供的证明材料为依据）；\n（3）撰写的咨询报告、调研报告、开发案例、政策建议等得到县级以上人民政府或市地级以上人民政府有关部门采纳和运用（以完整的技术方案和采纳单位提供的证明材料为依据）。\n对研究生申请学位应发表学术论文或取得科研实践成果的要求，各学院（学位点）可结合本学院（学位点）的实际情况制定不低于上述要求的规定，报学校研究生院批准后执行。\n2．申请提前毕业条件须满足《江西理工大学研究生学籍管理细则》相关规定。\n申请提前半年毕业的硕士研究生必须达到优秀毕业生，同时应满足以下条件：\n（1）读研期间无违纪行为，德智体美劳诸方面综合表现优秀。\n（2）已修满规定学分，无补考科目，课程加权平均成绩达85分及以上，论文开题至提交论文正式稿时间间隔不少于六个月；\n（3）以第一作者（作者单位为江西理工大学）在中文核心期刊以上刊物上公开发表与本专业相关的学术论文2篇以上；或者以第一作者出版了学术专著；或发表了高水平的期刊论文被SCI、EI、SSCI收录；或获国家发明专利（第一专利权人为江西理工大学）；或者在读期间获得省级及以上研究生科技竞赛二等奖及以上奖项。\n","date":"2025-01-10T00:00:00Z","image":"https://ayljzj520.github.io/p/%E7%A0%94%E7%A9%B6%E7%94%9F%E6%AF%95%E4%B8%9A%E8%A6%81%E6%B1%82/Amain_hu13077273176099163194.jpg","permalink":"https://ayljzj520.github.io/p/%E7%A0%94%E7%A9%B6%E7%94%9F%E6%AF%95%E4%B8%9A%E8%A6%81%E6%B1%82/","title":"研究生毕业要求"},{"content":" “Work！ ”\n学习完java基础之后，先学习mysql，然后稍微了解一下javaweb的层，直接去学习springboot，学完了然后往前学ssm，理解为什么springboot淘汰了以前的ssm框架，然后再往前学javaweb，理解框架的好处。这样每个学习都有目标，不至于说学习了javaweb，然后学习ssm的时候觉得之前学习的东西都白学了，学习springboot，觉得ssm白学了。 等这一套学习了完了之后，去学习设计模式，了解设计思想。然后再去学习数据结构，了解底层。最后才是jvm 从入门，到实际开发，一开始给你成就感，让你有动力继续学习下去，而不是从javaweb开始，盼着早日学到springboot，我就能够出去找工作了。 还有一点，springboot相较与javaweb和ssm，会简单很多，毕竟springboot约定大于配置。\njava架构层次\npojo（或entity）：实体类 util：工具类 service：代码逻辑 mapper：数据库接口层 web： 表现层(servlet,SpringMVC) 业务层() 数据层(JDBC,MyBatis)\n创建接口后，在接口中定义方法，在接口的实现类中实现方法\nspring MVC(表现层框架) 导jar包\n创建SpringMVC控制类\n创建SpringMVC配置类\n方法前加@controller\n设置访问路径@requestmapping(\u0026quot;/aaa\u0026quot;)\n@responsebody\nget请求与post请求\nrest代码风格\n查询get\n添加post\n修改put\n删除delete\n静态资源放行tomcat处理\nSSM整合 spring springConfig mybatis mybatisConfig jdbcConfig jdbc.properties SpringMVC servletConfig SpringMVCConfig 功能模块\n表与实体类 dao（接口+自动代理） service（接口+实现类） 业务层接口测试（整合JUnit） controller 表现层接口测试（PostMan） 表现层数据封装规范\n","date":"2025-01-08T00:00:00Z","image":"https://ayljzj520.github.io/p/java%E5%AD%A6%E4%B9%A0/Amain_hu15800079232963461917.jpg","permalink":"https://ayljzj520.github.io/p/java%E5%AD%A6%E4%B9%A0/","title":"java学习"},{"content":" “Work！ ”\nJava八股\n1、JDK下载 JDK下载\n2、编辑器下载 IDEA\u0026mdash; IDEA教程\nVS_code\u0026mdash; VS_code教程\n3、maven安装 前往阿帕奇官网，下载apache-maven-3.9.6-bin.zip， 解压缩到本地指定文件夹即可 国内Maven需要调整指定源为阿里云，修改setting.xml文件为如下\n1 2 3 4 5 6 7 8 9 10 \u0026lt;mirror\u0026gt; \u0026lt;!-- 指定镜像ID（可自定义名称） --\u0026gt; \u0026lt;id\u0026gt;Aliyun\u0026lt;/id\u0026gt; \u0026lt;!-- 匹配中央仓库（不可修改）--\u0026gt; \u0026lt;mirrorOf\u0026gt;central\u0026lt;/mirrorOf\u0026gt; \u0026lt;!-- 指定镜像名称（可自定义名称） --\u0026gt; \u0026lt;name\u0026gt;Aliyun\u0026lt;/name\u0026gt; \u0026lt;!-- 指定镜像路径（镜像地址） --\u0026gt; \u0026lt;url\u0026gt;http://maven.aliyun.com/nexus/content/groups/public\u0026lt;/url\u0026gt; \u0026lt;/mirror\u0026gt; 注意 3.9.6版本Maven默认开启禁止禁止http远端仓库，需将如下配置注释后，阿里云镜像才会生效\n1 2 3 4 5 6 7 \u0026lt;mirror\u0026gt; \u0026lt;id\u0026gt;maven-default-http-blocker\u0026lt;/id\u0026gt; \u0026lt;mirrorOf\u0026gt;external:http:*\u0026lt;/mirrorOf\u0026gt; \u0026lt;name\u0026gt;Pseudo repository to mirror external repositories initially using HTTP.\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://0.0.0.0/\u0026lt;/url\u0026gt; \u0026lt;blocked\u0026gt;true\u0026lt;/blocked\u0026gt; \u0026lt;/mirror\u0026gt; 完成后将Maven添加到ieda中。\n","date":"2025-01-08T00:00:00Z","image":"https://ayljzj520.github.io/p/java%E8%B5%84%E6%BA%90%E4%B8%8E%E4%BB%8B%E7%BB%8D/Amain_hu15800079232963461917.jpg","permalink":"https://ayljzj520.github.io/p/java%E8%B5%84%E6%BA%90%E4%B8%8E%E4%BB%8B%E7%BB%8D/","title":"java资源与介绍"},{"content":"块引用 这是一段提示文字 “Write！” 我是一段 Alerts 提示文字 语法格式如下\n1 \u0026gt; 语法格式 标题语法 1 2 3 4 5 6 7 8 9 10 11 --- layout: post title: 此处为博客标题 description: 此处为博客介绍 date: 2024-12-30//博客创建日期 image: person-markdown.assets/main.jpg//博客封面图 author: AYLj catalog: true categories://博客分类 - 个人自用 --- 折叠语法 这是一段折叠内容，语法格式如下 此处为被折叠的内容 1 2 3 4 \u0026lt;details\u0026gt; \u0026lt;summary\u0026gt;这是一段折叠内容，语法格式如下\u0026lt;/summary\u0026gt; 此处为被折叠的内容 \u0026lt;/details\u0026gt; markdown基础语法 图片语法\n1 image: a.assets/main.jpg 1 \u0026lt;div align=\u0026#34;center\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;./a.assets/1.jpg\u0026#34;/\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;br\u0026gt; 1 \u0026lt;img src=\u0026#34;./boom-beach.assets/3.png\u0026#34; width=\u0026#34;70%\u0026#34; align=\u0026#34;center\u0026#34; /\u0026gt;\u0026lt;br\u0026gt; 多图并列：\n1 2 3 \u0026lt;div align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./life02-diypc.assets/1-cpu-1.jpg\u0026#34; width=\u0026#34;40%\u0026#34;/\u0026gt;\u0026lt;img src=\u0026#34;./life02-diypc.assets/1-cpu-3.jpg\u0026#34; width=\u0026#34;40%\u0026#34;/\u0026gt; \u0026lt;/div\u0026gt; 文字格式\n1 \u0026lt;big\u0026gt;文字加大！！\u0026lt;/big\u0026gt;\u0026lt;br\u0026gt; 1 \u0026lt;font color=blue\u0026gt;文字加颜色！！\u0026lt;/font\u0026gt; 1 \u0026lt;big\u0026gt;\u0026lt;font color=blue\u0026gt;文字加大，加颜色！！！\u0026lt;/font\u0026gt;\u0026lt;/big\u0026gt;\u0026lt;br\u0026gt; 1 \u0026lt;center\u0026gt;文字居中\u0026lt;/center\u0026gt;\u0026lt;br\u0026gt; 超链接语法\n1 [百度](https://www.baidu.com/)\u0026lt;br\u0026gt; 1 [\u0026lt;font color=blue\u0026gt;百度\u0026lt;/font\u0026gt;](https://www.baidu.com/)\u0026lt;br\u0026gt; 表格语法\n1 2 3 4 | 标题1 | 标题2 |标题3 | | ---------- | ---------- | ---------- | | Header | Title | Title2 | | Paragraph | Text | Text | 效果如下：\n标题1 标题2 标题3 Header Title Title2 Paragraph Text Text ","date":"2024-12-30T00:00:00Z","image":"https://ayljzj520.github.io/p/hugo%E5%8D%9A%E5%AE%A2%E8%AF%AD%E6%B3%95%E7%A4%BA%E8%8C%83/Amain_hu5908995170573528190.jpg","permalink":"https://ayljzj520.github.io/p/hugo%E5%8D%9A%E5%AE%A2%E8%AF%AD%E6%B3%95%E7%A4%BA%E8%8C%83/","title":"hugo博客语法示范"},{"content":" “NetWork”\n前言 这篇文章针对本人的需求设计而来，也为了需要自动登录校园网的同学提供一个相关思路。\n本文所处的地理位置为：江西理工大学三江校区（东区）\n网络环境：电信网\n由于电信网的原因，每登录24小时，网络就会自动断开，又要去浏览器页面重新登陆（对于一个把电脑扔在工作室的人来说，这是一件令人头疼的事）\n1、原理 首先打开登录校园网的网页（前提是电脑已经连接了校园网JXUST-WLAN）\n按下 F12 打开浏览器开发者工具（如果没反应那就 fn + F12）\n输入账号密码，登录进入校园网\n找到这一串请求url，就是通过这一串url就能够成功登录校园网，把这一串复制下来\nhttp://10.17.8.18:801/eportal/portal/login?callback=dr1003\u0026amp;login_method=1\u0026amp;user_account=你的校园网账号%%40telecom\u0026amp;user_password=你的校园网密码。\n其中，user_account就是学号；user_password就是密码；login_method是运营商信息。里面信息不需要全部保留也可以登录校园网，保留至user_password的结束位置也能登陆。\n在搜索栏直接粘贴上文所说的url点击回车，若出现下图的情况即联网成功。\n原理可行！\n那我只要每次开机后电脑能自动访问这条url那不就自动登录校园网了吗？\n直接进入实操！！！\n2、实际操作 在桌面新建一个txt文本文件，将文件后缀名修改为.bat格式\n右键选择编辑或用记事本打开，在里面粘贴如下代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 @echo off :: 设置控制台为 UTF-8 编码 chcp 65001 :: 启用延迟变量扩展 setlocal EnableDelayedExpansion :: 初始化计数器 set /a counter=0 :loop :: 增加计数器 set /a counter+=1 :: 输出当前是第几次判断 echo 当前为第 !counter! 次判断。 :: 检测是否有网络连接（超时 10 秒） ping -n 1 -w 10000 baidu.com \u0026gt;nul 2\u0026gt;\u0026amp;1 if errorlevel 1 ( echo 无网络连接（ping超时10秒），尝试在浏览器中访问登录页面... :: 指定浏览器路径（假设使用 Chrome）打开指定网址 start \u0026#34;\u0026#34; \u0026#34;http://10.17.8.18:801/eportal/portal/login?callback=dr1003\u0026amp;login_method=1\u0026amp;user_account=你的校园网账号%%40telecom\u0026amp;user_password=你的校园网密码\u0026#34; echo 登录页面已在浏览器中打开。 ) else ( echo 网络连接正常，跳过登录操作... ) :: 倒计时循环输出（每分钟输出一次） for /l %%i in (5,-1,1) do ( set /a minutes=%%i echo 倒计时（结束后会检测网络）：!minutes! 分 timeout /t 60 \u0026gt;nul ) :: 循环检测 goto loop 我对代码做一个简单的解释：（如果不想了解原理可以跳过该解释）\n这段代码主要功能是持续监测网络连接状况，并在网络断开时自动通过浏览器打开校园网登录页面。\n首先，代码设置控制台编码为 UTF-8(将运行在控制台下输出中文内容)，并启用延迟变量扩展以便在循环中动态使用变量。然后，它初始化一个计数器，用于记录执行循环的次数。\n接下来，进入一个无限循环，程序每次都会通过 ping 命令检测是否ping通百度，如果检测到网络连接失败，则输出“无网络连接”并尝试在默认浏览器中访问指定的校园网登录请求。如果网络正常，程序则输出“网络连接正常”，跳过登录操作。\n然后，为了避免频繁检测，代码会在每次检测后进入倒计时状态，每分钟输出倒计时信息，直到检测下次网络连接状态。整个过程会持续进行，直到手动终止脚本。\n注意：start \u0026quot;\u0026quot; \u0026ldquo;http://10.17.8.18:801/eportal/portal/login?callback=dr1003\u0026amp;login_method=1\u0026amp;user_account=你的校园网账号%%40telecom\u0026amp;user_password=你的校园网密码\u0026rdquo;\n这段代码的url需要你自己通过上面的方法去获取。\n接下来最重要的事一定要仔细看！\n接下来最重要的事一定要仔细看！\n接下来最重要的事一定要仔细看！\n重要的事说三遍！！！\n请检查你自己所获取到的url，在校园网账号后面应该会有%40字符，由于复制进脚本后，由脚本通过start命令发起访问会将%40识别为@，从而导致输进浏览器的url缺失这一关键信息\n若不进行修改就会导致下图的访问结果。\n解决方法：在%40这个字符前再加一个%，这样就能确保url的正确读取并访问。\n接下来运行这个.bat文件，就会自动向校园网登录端发送请求，然后登录你的校园网账号，并且每五分钟会ping一次百度的网站。\n若ping不通，则会再次执行登录请求。\n在运行过程中请不要关闭此命令行窗口！！！\n3、进阶操作 为了使开机能自动运行该脚本，需要将该脚本文件加入开机自启动。\n按win+r打开运行窗口，输入下述指令进入到开机启动目录：\n1 shell:startup 将编写好的.bat脚本复制进去，即可做到开机自动运行。\n补充 有的时候电脑开机后没有自动连接到校园网，自然也无法完成登录请求。\n由于只ping一个站点有时会造成误判，从而反复执行。所以增加一次操作，对baidu.com和qq.com均ping一次，\n只有在两次都ping不通的情况下，才会去执行操作，使电脑先连接校园网再执行登录操作。\n对代码循环执行时间调整为10分钟一次\n本校的校园网名称为“JXUST-WLAN”，所以经过修改后的代码应该这么写：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 @echo off :: 设置控制台为 UTF-8 编码 chcp 65001 :: 启用延迟变量扩展 setlocal EnableDelayedExpansion :: 设置无线网络名称（SSID） set SSID=JXUST-WLAN :: 获取脚本所在的路径 set scriptPath=%~dp0 :: 设置 wlan-connect.txt 文件的完整路径 set filePath=%scriptPath%wlan-connect.txt :: 检测 wlan-connect.txt 文件是否存在 if exist \u0026#34;%filePath%\u0026#34; ( :: 文件存在，删除文件后重新创建 del \u0026#34;%filePath%\u0026#34; ) :: 新建 wlan-connect.txt 文件 echo. \u0026gt; \u0026#34;%filePath%\u0026#34; :loop :: 增加计数器 set /a counter+=1 :: 输出当前是第几次判断 echo 当前为第 !counter! 次判断。 :: 检测是否有网络连接（ping baidu.com 或 qq.com，超时 10 秒） ping -n 1 -w 10000 baidu.com \u0026gt;nul 2\u0026gt;\u0026amp;1 if errorlevel 1 ( echo 百度 ping 超时，尝试 ping qq.com... ping -n 1 -w 10000 qq.com \u0026gt;nul 2\u0026gt;\u0026amp;1 if errorlevel 1 ( echo 无网络连接（百度和qq.com都 ping 超时），尝试在浏览器中访问登录页面... :: 获取当前连接的 SSID（检测是否连接JXUST-WLAN） for /f \u0026#34;tokens=2 delims=:\u0026#34; %%i in (\u0026#39;netsh wlan show interfaces ^| findstr /i \u0026#34;SSID\u0026#34;\u0026#39;) do ( set currentSSID=%%i :: 去除前后空格 set currentSSID=!currentSSID: =! ) :: 判断是否已经连接到指定的 WLAN 网络 if /i \u0026#34;%currentSSID%\u0026#34;==\u0026#34;%SSID%\u0026#34; ( echo 已经连接到网络 %SSID%，跳过连接操作。 ) else ( echo 未连接到指定网络 %SSID%，尝试连接... :: 执行连接操作 netsh wlan connect name=%SSID% :: 等待一段时间，确保网络连接 timeout /t 10 \u0026gt;nul echo 连接操作完成。 ) start \u0026#34;\u0026#34; \u0026#34;http://10.17.8.18:801/eportal/portal/login?callback=dr1003\u0026amp;login_method=1\u0026amp;user_account=你的校园网账号%%40telecom\u0026amp;user_password=你的校园网密码\u0026#34; echo 登录页面已在浏览器中打开。 timeout /t 5 \u0026gt;nul :: 写入执行次数和当前时间到 wlan-connect.txt echo 第 !counter! 次网络判断后执行重连，当前执行时间为: !date! !time! \u0026gt;\u0026gt; \u0026#34;%filePath%\u0026#34; ) else ( echo 网络连接正常（qq.com ping 通），跳过登录操作... ) ) else ( echo 网络连接正常（baidu.com ping 通），跳过登录操作... ) :: 倒计时循环输出（每 10 分钟输出一次） for /l %%i in (30,-10,0) do ( set /a minutes=%%i echo 倒计时（结束后会检测网络）：!minutes! 分 timeout /t 600 \u0026gt;nul ) echo 倒计时结束，开始检测网络... :: 循环检测 goto loop 至此，全部完成\n会在脚本所在目录下输出`wlan-connect.txt`的日志文件。\n最后实现的效果如下图所示：\n","date":"2024-12-29T00:00:00Z","image":"https://ayljzj520.github.io/p/%E6%B1%9F%E8%A5%BF%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/Amain_hu12269823502898717755.jpg","permalink":"https://ayljzj520.github.io/p/%E6%B1%9F%E8%A5%BF%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/","title":"江西理工大学校园网自动登录"},{"content":" “Work. ”\n前言 git相关指令学习 1. git基础指令 1 git add . 1 git commit -m \u0026#34;测试\u0026#34; 1 git push -u origin main 1 git pull 1 git clone ","date":"2024-12-27T00:00:00Z","image":"https://ayljzj520.github.io/p/git%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C1/Amain_hu2329034020457868427.jpg","permalink":"https://ayljzj520.github.io/p/git%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C1/","title":"git相关操作1"},{"content":" “Work. ”\n前言 安装前可以浏览这三个教程：\nwsl安装教程\n安装wsl后虚拟机无法启动\n原生ubuntu安装教程\n1、安装系统 步骤1 - 启用适用于 Linux 的 Windows 子系统： 需要先启用“适用于 Linux 的 Windows 子系统”可选功能，然后才能在 Windows 上安装 Linux 分发。 以管理员身份打开 PowerShell 并运行：\n1 dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 步骤2 - 启用虚拟机功能： 安装 WSL 2 之前，必须启用“虚拟机平台”可选功能。 计算机需要虚拟化功能才能使用此功能。 以管理员身份打开 PowerShell 并运行：\n1 dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 步骤3 - 下载 Linux 内核更新包： 以管理员身份打开 PowerShell 并运行：\n1 wsl --install 步骤4 - 将 WSL 2 设置为默认版本： 打开 PowerShell，然后在安装新的 Linux 发行版时运行以下命令，将 WSL 2 设置为默认版本：\n1 wsl --set-default-version 2 步骤5 - 安装所选的 Linux 分发版： •\tUbuntu 16.04 LTS\n•\tUbuntu 18.04 LTS\n•\tUbuntu 20.04 LTS\n•\topenSUSE Leap 15.1\n•\tSUSE Linux Enterprise Server 12 SP5\n•\tSUSE Linux Enterprise Server 15 SP1\n•\tKali Linux\n•\tDebian GNU/Linux\n•\tFedora Remix for WSL\n•\tPengwin\n•\tPengwin Enterprise\n•\tAlpine WSL\n2、修改环境 切换镜像 修改源：找到 cd /etc/apt 路径下的 sources.list 文件对其进行修改\n在此路径下打开命令行，输入sudo vim sources.list\n命令行中相关操作命令如下：\n•\tg 光标到头部\n•\td 删除\n•\tshift + g 全部删除\n•\ti 写入\n•\t粘贴 以下 阿里源 或 清华源\n•\tESC 退出写入模式\n•\t:wq 保存退出\n复制镜像源 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse ##测试版源 deb http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiverse # 源码 deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse ##测试版源 deb-src http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiverse # Canonical 合作伙伴和附加 deb http://archive.canonical.com/ubuntu/ xenial partner deb http://extras.ubuntu.com/ubuntu/ xenial main deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse 更新镜像 操作完成后使用如下命令更新镜像：\n•\tsudo apt-get updata 更新\n•\tsudo apt-get upgrade 更新\nsudo add-apt-repository ppa:openjdk-r/ppa\n安装jdk：sudo apt-get install openjdk-8-jdk\n拓展篇(在环境Ubuntu/Mint物理机上安装python环境)：\n1 ls /usr/bin/python* 1 update-alternatives --list python 1 sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1 1 sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 2 1 sudo update-alternatives --config python 1 sudo apt install python3-pip 3、 纠错 错误1：证明器不存在 检查dist文件夹下有没有这个cprover_priority\n若没有那就把cse 改成这个名字，然后再添加可执行权限\n错误2：判定异常 若验证检查结果异常，需记录判定情况，需要记录的有： 策略：多策略模式下为桌面的strategy文件夹；单策略模式下为strategy.txt文件 判定过程文件夹：桌面output文件夹下与判定例子同名的文件夹。 在代码操作中，指针越界\n错误3：格式转换失败 可能的原因： 1、没有放置公理集Axioms 2、没有使用Eprover融合系统，没有使用到转换的文件 3、由于问题的原因，可能无法转换 4、可能转换成功，但是界面显示错误\n错误4：调试失败（一般少见） 问题： 同样的例子在调试过程中超时导致无法判定 但是在带界面版本能得到不可满足 在别的电脑上调试也能成功 解决方法： 重装ubuntu系统\n","date":"2024-12-26T00:00:00Z","image":"https://ayljzj520.github.io/p/%E8%87%AA%E5%8A%A8%E6%8E%A8%E7%90%86%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Amain_hu12645121008201569857.jpg","permalink":"https://ayljzj520.github.io/p/%E8%87%AA%E5%8A%A8%E6%8E%A8%E7%90%86%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","title":"自动推理（环境搭建）"},{"content":" “Work. ”\n前言 进行此项内容前，请确保已经完成环境的配置。\n相关网站：TPTP官网\n1、实验前准备 准备条件 拷贝好dist文件夹，确保内部具有正确的文件\nproblems文件夹中存放问题以及Axiom公理集，测试完output中会存放生成相关文件，strategy中存放策略集合，proofStatistics.txt内存放所有问题的证明时间。\n在dist文件夹内打开命令行窗口，使用ls命令，检查文件是否具有可执行权限：\ncse,eprover,tptp4X,以及相关jar包。\n若没有权限，使用如下命令对文件授予权限：chmod +x 文件名\n使用./eprover --verson或./vampire --verson查看对应软件的版本\n使用命令行版本测试时，将cse替换为自己导出的cse\n替换eprover的版本时，要将eprover和mcs_eprover.jar同时替换才正确。\n3.1以上的版本的Eprover会出现异常，则需要进行以下操作（重新打开一个终端，输入下述指令）：\n1 ps -ef|grep eprover 然后使用kill指令将前三个icdc进程杀死\n拓展(输入./vampire \u0026ndash;ignore_missing on \u0026ndash;mode casc -t 300 +一个问题的绝对路径，就能得到下面这样的证明搜索路径和时间，这样子只能测单个的原始时间)\n带界面版本测试命令 在虚拟机内：\n(1)启动Terminal;\n(2)切换⽬录：cd Desktop/dist;\n(3) 执⾏命令：./kzprover.sh，脚本没有可执⾏权限时， sudo chmod +x kzprover.sh;\n(4) 启动时把单组合模式改为多组合模式，其他不需要改.\n命令行版本测试命令 测试CSE和Eprover融合系统命令：\n1 java -jar mcs_epr.jar CSE_E problems 0 1 4 1 300 0 1 10 测试CSE和Vampire融合系统命令：\n1 java -jar mcs_vampire.jar CSE_V problems 0 1 2 1 260 30 1 10 单独测试CSE系统命令：\n1 java -jar mcs_scs.jar CSE problems 0 1 0 1 1 150 其中260 20 为时间参数 如果那两个数值变为300 0，意味着是原始测出来的数据， 前一个数值代表eprover测的时间，后一个数值代表CSE测的时间， 300秒减去前两个数值所剩下的时间也是eprover参与的\n2、代码相关逻辑 基础代码修改项 必改项 2217 Resolution.cpp for(int i=0;iuLitNum;++1i){删除1 使用776行的main函数 替换原始800行的main函数 验证检查 原始代码 修改后，会生成run文件 Prover.cpp\n319 if(1){\nFileOp::delRunFiles();\n} if(0){\nFileOp::delRunFiles();\n} 选改项 main.cpp debug 编译release 216 #define newTriDebug //#define newTriDebug 755 //child = fork();\nif (0 == 0) child = fork();\nif (child == 0) { 生成cse文件 部分演绎框架 CSE1.3_pre 文件 位置 方法名 较优子句 TriAlg.cpp 345 GenerateTriByRecodePath 优化演绎路径 TriAlg.cpp 1832 GenerateTriByRecodePathLROptimalProofSearch 充分使用子句 TriAlg.cpp 2983 GenerateTriByRecodePathLR 单元子句排序规则 SortRule.h 168 候选子句排序 Resolution.cpp 4833 合一算法 Unify.cpp 320 LitMgu 预处理 Resolution.cpp 3183 构建标准矛盾体思想 方法 从左到右构建 从右到左构建 思想 选择了候选子句集的文字，\n在决策文字集上遍历文字判断是否互补 选择了决策文字集上的文字，\n在候选子句集中遍历子句，再遍历文字是否互补 代表算法 充分使用子句，优化演绎路径 较优子句 标准矛盾体：\n决策文字及其下拉文字，但不包含对角线最后一位\n文字变元输出\n1 2 cout\u0026lt;\u0026lt; QLit-\u0026gt;subTerm-\u0026gt;ToString()\u0026lt;\u0026lt;endl;//debug输出当前文字项 cout\u0026lt;\u0026lt;QLit-\u0026gt;subTerm-\u0026gt;ToStringBind()\u0026lt;\u0026lt;endl;//debug输出当前文字项和变元元替换项 3、融合系统E3.1以上版本卡住解决方法 解决方法1：原始方法\n新打开一个命令行窗口输入以下指令：\n1 ps -ef|grep eprover 使用kill指令将前三个eprover的进程杀死。\n解决方法2：自编sh脚本方法\n新建一个名为kill.sh的文件，其内代码编写如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 # 获取脚本文件所在的路径 SCRIPT_DIR=$(dirname \u0026#34;$(readlink -f \u0026#34;$0\u0026#34;)\u0026#34;) # 日志文件路径 LOG_FILE=\u0026#34;$SCRIPT_DIR/kill-log.txt\u0026#34; # 检查并删除已存在的日志文件 if [ -f \u0026#34;$LOG_FILE\u0026#34; ]; then rm \u0026#34;$LOG_FILE\u0026#34; fi # 创建新的日志文件 touch \u0026#34;$LOG_FILE\u0026#34; # 循环执行 echo \u0026#34;实验进程守护中，请勿关闭此窗口\u0026#34; while true; do # 获取 proofStatistics.txt 的路径 PROOF_FILE=\u0026#34;$SCRIPT_DIR/proofStatistics.txt\u0026#34; # 如果 PROOF_FILE 为空或文件不存在，直接跳到 sleep 420 if [ -z \u0026#34;$PROOF_FILE\u0026#34; ] || [ ! -f \u0026#34;$PROOF_FILE\u0026#34; ]; then echo \u0026#34;实验进程守护中，请勿关闭此窗口\u0026#34; sleep 350 continue fi # 获取 proofStatistics.txt 的修改时间（单位：秒） FILE_MOD_TIME=$(stat -c %Y \u0026#34;$PROOF_FILE\u0026#34;) # 获取当前系统时间（单位：秒） CURRENT_TIME=$(date +%s) # 计算时间差（单位：秒） TIME_DIFF=$((CURRENT_TIME - FILE_MOD_TIME)) # 判断时间差是否超过 7 分钟 (420 秒) if [ \u0026#34;$TIME_DIFF\u0026#34; -le 420 ]; then # 如果时间差未超过 7 分钟，结束本轮循环 echo \u0026#34;实验进程守护中，请勿关闭此窗口\u0026#34; else # 如果时间差超过 7 分钟，杀死所有名为 eprover 的进程 PIDS=$(pgrep -f eprover) if [ -n \u0026#34;$PIDS\u0026#34; ]; then # 获取当前系统时间 CURRENT_TIME_READABLE=$(date \u0026#34;+%Y-%m-%d %H:%M:%S\u0026#34;) # 记录杀死进程的 PID 并写入日志文件 for PID in $PIDS; do echo \u0026#34;$CURRENT_TIME_READABLE - 成功杀死进程, PID: $PID\u0026#34; \u0026gt;\u0026gt; \u0026#34;$LOG_FILE\u0026#34; done # 杀死所有名为 eprover 的进程 pkill -f eprover echo \u0026#34;成功杀死进程\u0026#34; fi fi # 等待 7 分钟后再次循环 sleep 420 # 420秒 == 7分钟 done 其原理如下：\n脚本检测dist路径下的proofStatistics.txt文件的修改时间，若超过7分钟，则杀死名为eprover的所有进程。 若proofStatistics.txt文件的修改时间，未超过7分钟则等待7分钟后进入下一轮循环 若未检测到proofStatistics.txt文件，则休眠7分钟。 使用规则：\n将kill.sh文件置于dist文件夹内； 使用chmod +x kill.sh授予权限； 在命令窗口使用./kill.sh启动脚本； 脚本会在dist文件夹内生成kill-log.txt日志文件。 ","date":"2024-12-26T00:00:00Z","image":"https://ayljzj520.github.io/p/%E8%87%AA%E5%8A%A8%E6%8E%A8%E7%90%86%E5%AE%9E%E9%AA%8C%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/Amain_hu12645121008201569857.jpg","permalink":"https://ayljzj520.github.io/p/%E8%87%AA%E5%8A%A8%E6%8E%A8%E7%90%86%E5%AE%9E%E9%AA%8C%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/","title":"自动推理（实验相关内容）"},{"content":" “A Happy Game. ”\n相关链接 海岛奇兵下载链接：海岛奇兵国服\n海岛奇兵相关脚本：\n梦想脚本(链接失效)\n梦想梦想模拟雕像脚本(链接失效)\n养号说明：单号配置\n个人上传：个人云盘海岛脚本\n最新版腾讯切号使用教程+qq突破登录上限说明\n海岛奇兵数据网地址发布页\n相关介绍 养号：\n1 ULGOXKK 查序列：\n1 VZNKMZK zhima123\u0026mdash;666\u0026mdash;17306971\nobsidian常用技巧， 中文论坛\n小号QQ：\n龙行天下\n注册手机一加12\n2024年6月\n江西赣州\n沙滩树教程 想种沙滩树要先种压岸树！\n1压岸树 压岸树首先将基地左上角靠山的位置空出来，别的位置用建筑填上，建筑直接的间隔不要留有大于(包括)2×2的位置（防止长树），确保树往左上角长。\n2砍部分树 当树长的较多的时候，可以将靠近上方的树砍掉，然后用建筑堵住，防止长回去，将树生长的方向挤向岸边。\n3挂脚本 当岸边长满树的时候，或者长较多树的时候，可以尝试开始挂航母脚本，促进沙滩树的生长。\n","date":"2024-12-25T00:00:00Z","image":"https://ayljzj520.github.io/p/%E6%B5%B7%E5%B2%9B%E5%A5%87%E5%85%B5/Amain_hu12494988652238919125.jpg","permalink":"https://ayljzj520.github.io/p/%E6%B5%B7%E5%B2%9B%E5%A5%87%E5%85%B5/","title":"海岛奇兵"}]